<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta property="og:title" content="Monique.dev | Gerador de Memes" />
  <meta property="og:url" content="https://meme.monique.dev" />
  <meta property="og:image" content="https://meme.monique.dev/meme.jpg" />
  <meta property="og:description" content="Gerador de memes feito ao vivo no canal https://twitch.tv/moniquelive/" />

  <title>Monique.dev | Gerador de Memes</title>

  <link href="style.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-BmbxuPwQa2lc/FVzBcNJ7UAyJxM6wuqIj61tLrc4wSX0szH/Ev+nYRRuWlolflfl" crossorigin="anonymous">
    <link rel="stylesheet"
          href="https://cdnjs.cloudflare.com/ajax/libs/github-fork-ribbon-css/0.2.3/gh-fork-ribbon.min.css" />
</head>

<body>
<a class="github-fork-ribbon right-top" href="https://github.com/moniquelive/tv-gin"
   target="_blank" data-ribbon="Fork me on GitHub"
   title="Fork me on GitHub">Fork me on GitHub</a>
<div class="container">
  <h1>Escolha o Meme:</h1>
  <form action="/meme" method="get" autocomplete="off">
    <p>
      <label for="meme" class="form-label">Escolha o meme</label>
      <select name="meme" id="meme" class="form-control">
        <optgroup label="Implementados">
          {{ range .Memes }}
          <option value="{{ .ID }}" data-text-boxes="{{ len .Boxes }}">{{ .Name }}</option>
          {{ end }}
        </optgroup>
      </select>
    </p>
    <p></p>
    <button type="submit" class="btn btn-primary">Enviar</button>
  </form>
</div>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-b5kHyXgcpbZJO/tY9Ul7kGkf1S0CWuKcCD38l8YkeH8z8QjE0GmW1gYU5S9FOnJ0"
        crossorigin="anonymous"></script>
<script>
  const elForm = document.getElementsByTagName("form")[0]
  const elSelect = document.getElementsByTagName("select")[0]
  const elP = elForm.childNodes[3]
  const extenso = ["Primeiro", "Segundo", "Terceiro", "Quarto"]
  elSelect.onchange = (e) => {
      elP.innerHTML = ""
      const numBoxes = parseInt(e.target.selectedOptions[0].dataset.textBoxes)
      for (let i = 0; i < numBoxes; i++) {
          const elInput = document.createElement("input")
          elInput.type = "text"
          elInput.name = "text[]"
          elInput.id = "text" + (i + 1)
          elInput.className = "form-control"

          const elLabel = document.createElement("label")
          elLabel.innerText = extenso[i]
          elLabel.htmlFor = elInput.id

          elP.appendChild(elLabel)
          elP.appendChild(elInput)
      }
  }
  elSelect.dispatchEvent(new Event('change'))
</script>
</body>
</html>